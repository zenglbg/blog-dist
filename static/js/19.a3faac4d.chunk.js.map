{"version":3,"sources":["components/common/preview/index.tsx","components/common/editor/index.tsx","components/web/markdown/index.tsx"],"names":["Showdown","setOption","setFlavor","converter","Converter","preview","markdown","useEffect","document","getElementById","innerHTML","makeHtml","className","id","editor","setMarkdown","console","log","value","onChange","val","options","lineNumbers","useState","data","sessionStorage","getItem","setItem"],"mappings":"mGAAA,+EAIAA,IAASC,UAAU,UAAU,GAC7BD,IAASC,UAAU,aAAa,GAChCD,IAASE,UAAU,UAGnB,IAAMC,EAAY,IAAIH,IAASI,UAMhB,SAASC,EAAT,GAA0D,IAAD,IAAtCC,gBAAsC,MAA3B,GAA2B,EAMtE,OALAC,qBAAU,WACIC,SAASC,eAAe,WAChCC,UAAYP,EAAUQ,SAASL,MAInC,yBAAKM,UAAU,WACb,6BAASC,GAAG,UAAUD,UAAU,e,uDCvBtC,+EAee,SAASE,EAAT,GAAiE,IAA/CR,EAA8C,EAA9CA,SAAUS,EAAoC,EAApCA,YAMzC,OAFAC,QAAQC,IAAIX,EAAU,OAGpB,yBAAKM,UAAU,UACb,kBAAC,IAAD,CACEM,MAAOZ,EACPa,SAAU,SAAAC,GAAG,OAAIL,EAAYK,IAC7BC,QAVU,CACdC,aAAa,Q,4ICVF,qBAAY,IAAD,EACQC,mBAAS,eADjB,mBACjBjB,EADiB,KACPS,EADO,KAcxB,OAJAR,qBAAU,WACR,IAAMiB,EAAOC,eAAeC,QAAQ,YACpCX,EAAYS,KACX,CAAClB,IAEF,yBAAKM,UAAU,eACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACZN,EACC,kBAAC,IAAD,CAAQA,SAAUA,EAAUS,YAjBjB,SAACK,GACfA,IACHA,EAAM,eAERL,EAAYK,GACZK,eAAeE,QAAQ,WAAYP,MAazB,MAGN,yBAAKP,GAAG,UAAUD,UAAU,WACzBN,EAAW,kBAAC,IAAD,CAASA,SAAUA,IAAe","file":"static/js/19.a3faac4d.chunk.js","sourcesContent":["import \"./index.less\";\nimport React, { ReactElement, useState, useEffect } from \"react\";\nimport Showdown from \"showdown\";\n\nShowdown.setOption(\"tables\", true);\nShowdown.setOption(\"tasklists\", true);\nShowdown.setFlavor(\"github\");\n\n// markdown to html转换器\nconst converter = new Showdown.Converter();\n\ninterface Props {\n  markdown?: string;\n}\n\nexport default function preview({ markdown = \"\" }: Props): ReactElement {\n  useEffect(() => {\n    const $el = document.getElementById(\"content\");\n    $el.innerHTML = converter.makeHtml(markdown);\n  });\n\n  return (\n    <div className=\"preview\">\n      <article id=\"content\" className=\"content\"></article>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useState,\n  useRef,\n  ChangeEvent,\n  useEffect\n} from \"react\";\nimport CodeMirror from \"react-codemirror\";\nimport \"./index.less\";\n\ninterface Props {\n  setMarkdown: Function;\n  markdown: string;\n}\n\nexport default function editor({ markdown, setMarkdown }: Props): ReactElement {\n  const options = {\n    lineNumbers: true\n  };\n  console.log(markdown, 33333);\n\n  return (\n    <div className=\"editor\">\n      <CodeMirror\n        value={markdown}\n        onChange={val => setMarkdown(val)}\n        options={options}\n      />\n    </div>\n  );\n}\n","import \"./index.less\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nexport interface IAppProps {}\nimport Editor from \"../../common/editor\";\nimport Preview from \"../../common/preview\";\n\nexport default function() {\n  const [markdown, setMarkdown] = useState(\"// markdown\");\n  const handlechange = (val: string) => {\n    if (!val) {\n      val = \"// markdown\";\n    }\n    setMarkdown(val);\n    sessionStorage.setItem(\"markdown\", val);\n  };\n\n  useEffect(() => {\n    const data = sessionStorage.getItem(\"markdown\");\n    setMarkdown(data);\n  }, [markdown]);\n  return (\n    <div className=\"articleEdit\">\n      <div className=\"main\">\n        <div className=\"editor-wrapper\">\n          {markdown ? (\n            <Editor markdown={markdown} setMarkdown={handlechange} />\n          ) : null}\n        </div>\n\n        <div id=\"preview\" className=\"preview\">\n          {markdown ? <Preview markdown={markdown} /> : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}