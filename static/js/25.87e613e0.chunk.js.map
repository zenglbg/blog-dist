{"version":3,"sources":["components/common/adminLayout/index.tsx"],"names":["Header","Sider","Content","AdminLayout","Footer","state","collapsed","toggle","setState","handleClickMenuItem","item","console","log","props","sessionStorage","setItem","key","menuItem","menuConfig","map","index","Item","onClick","to","path","type","icon","title","this","user","isLogin","logoClass","menu","id","style","height","trigger","collapsible","className","theme","mode","defaultSelectedKeys","getItem","background","padding","backgroundColor","overlay","children","Component","connect"],"mappings":"gTAIQA,G,WAAAA,QAAQC,E,IAAAA,MAAOC,E,IAAAA,QAeVC,G,IAfmBC,OAehC,2MACEC,MAAQ,CAAEC,WAAW,GADvB,EAYEC,OAAS,WACP,EAAKC,SAAS,CACZF,WAAY,EAAKD,MAAMC,aAd7B,EAiBEG,oBAAsB,SAACC,GACrBC,QAAQC,IAAI,EAAKC,OAEjBC,eAAeC,QAAQ,cAAeL,EAAKM,MApB/C,EAuBEC,SAAW,kBACTC,IAAWC,KAAI,SAACT,EAAMU,GAAP,OACb,sBAAMC,KAAN,CACEL,IAAKI,EACLE,QAAS,WACP,EAAKb,oBAAoBC,KAG3B,kBAAC,IAAD,CAAMa,GAAIb,EAAKc,MACb,uBAAMC,KAAMf,EAAKgB,OACjB,8BAAOhB,EAAKiB,aAjCtB,mFAIwBC,KAAKf,MAAMgB,KAAvBC,UAJZ,+BAsCY,IACAA,EAAYF,KAAKf,MAAMgB,KAAvBC,QACFC,EAAYH,KAAKvB,MAAMC,UAAY,UAAY,UAC/C0B,EACJ,2BACE,sBAAMX,KAAN,CAAWL,IAAI,KAAf,cAGJ,OAAOc,EACL,yBAAKG,GAAG,eACN,uBAAQC,MAAO,CAAEC,OAAQ,UACvB,kBAAClC,EAAD,CAAOmC,QAAS,KAAMC,aAAW,EAAC/B,UAAWsB,KAAKvB,MAAMC,WACtD,yBAAKgC,UAAWP,IAChB,uBACEQ,MAAM,OACNC,KAAK,SACLC,oBAAqB,CACnB3B,eAAe4B,QAAQ,gBAAkB,MAG1Cd,KAAKX,aAGV,2BACE,kBAACjB,EAAD,CAAQkC,MAAO,CAAES,WAAY,OAAQC,QAAS,IAC5C,uBACEN,UAAU,UACVb,KAAMG,KAAKvB,MAAMC,UAAY,cAAgB,YAC7CgB,QAASM,KAAKrB,SAEhB,0BAAM+B,UAAU,QACd,uBAAQJ,MAAO,CAAEW,gBAAiB,YAC/BjB,KAAKf,MAAMgB,KAAKA,MAEnB,uBAAUiB,QAASd,EAAMM,UAAU,QACjC,uBAAMb,KAAK,YAKjB,2BACE,yBAAKa,UAAU,gBACb,kBAACpC,EAAD,CAASoC,UAAU,WAAWV,KAAKf,MAAMkC,eAOjD,SAvFR,GAAiCC,cAiGlBC,uBANS,SAAA5C,GAAK,MAAK,CAChCwB,KAAMxB,EAAMwB,QAGa,GAEZoB,CAA6C9C","file":"static/js/25.87e613e0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Layout, Icon, Avatar, Dropdown } from \"antd\";\nconst { Header, Sider, Content, Footer } = Layout;\nimport { UserState } from \"../../../redux/reducer\";\nimport { menuConfig } from \"../../../utils\";\nimport \"./index.less\";\n\n/**\n * @todo 引入less 报错\n */\ninterface Props {\n  user: UserState;\n}\ninterface State {\n  collapsed: boolean;\n}\n\nexport class AdminLayout extends Component<Props, State> {\n  state = { collapsed: false };\n\n  componentDidMount() {\n    const { isLogin } = this.props.user;\n    if (!isLogin) {\n      /**\n       * 如果isLogin 成功为true , 则render 返回null\n       */\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n  handleClickMenuItem = (item: any) => {\n    console.log(this.props);\n    // (this.props as any).history.push(item.path);\n    sessionStorage.setItem(\"menuItmeKey\", item.key);\n  };\n\n  menuItem = () =>\n    menuConfig.map((item, index) => (\n      <Menu.Item\n        key={index}\n        onClick={() => {\n          this.handleClickMenuItem(item);\n        }}\n      >\n        <Link to={item.path}>\n          <Icon type={item.icon} />\n          <span>{item.title}</span>\n        </Link>\n      </Menu.Item>\n    ));\n\n  render() {\n    const { isLogin } = this.props.user;\n    const logoClass = this.state.collapsed ? \"logoMin\" : \"logoMax\";\n    const menu = (\n      <Menu>\n        <Menu.Item key=\"1\">login out</Menu.Item>\n      </Menu>\n    );\n    return isLogin ? (\n      <div id=\"adminLayout\">\n        <Layout style={{ height: \"100vh\" }}>\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className={logoClass}></div>\n            <Menu\n              theme=\"dark\"\n              mode=\"inline\"\n              defaultSelectedKeys={[\n                sessionStorage.getItem(\"menuItmeKey\") || \"0\"\n              ]}\n            >\n              {this.menuItem()}\n            </Menu>\n          </Sider>\n          <Layout>\n            <Header style={{ background: \"#fff\", padding: 0 }}>\n              <Icon\n                className=\"trigger\"\n                type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\n                onClick={this.toggle}\n              ></Icon>\n              <span className=\"user\">\n                <Avatar style={{ backgroundColor: \"#f56a00\" }}>\n                  {this.props.user.user}\n                </Avatar>\n                <Dropdown overlay={menu} className=\"ml10\">\n                  <Icon type=\"down\" />\n                </Dropdown>\n              </span>\n            </Header>\n\n            <Layout>\n              <div className=\"wrap-content\">\n                <Content className=\"content\">{this.props.children}</Content>\n              </div>\n            </Layout>\n            {/* <Footer>footer</Footer> */}\n          </Layout>\n        </Layout>\n      </div>\n    ) : null;\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminLayout);\n"],"sourceRoot":""}