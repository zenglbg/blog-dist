{"version":3,"sources":["routes/admin.ts","routes/web.ts","routes/requireLogin.tsx","routes/index.tsx","utils/api.ts","redux/actions/user.ts","redux/actions/article.ts","redux/actions/tag.ts","redux/actions/category.ts","redux/actions/star.ts","redux/actions/index.ts","redux/reducer/user.ts","redux/reducer/article.ts","redux/reducer/tag.ts","redux/reducer/category.ts","redux/reducer/star.ts","redux/reducer/index.ts","redux/epics/user.ts","redux/epics/article.ts","redux/epics/tag.ts","redux/epics/star.ts","redux/epics/category.ts","redux/index.ts","redux/epics/index.ts","index.tsx","utils/utils.ts","utils/config.ts","utils/loadable.tsx","utils/index.ts"],"names":["admins","Loadable","title","path","exact","menu","component","beforeEnter","routeProps","extraProps","web_home","web_archive","web_detail","web_star","web_about","webs","icon","Component","requireLogin","props","user","sessionStorage","getItem","pathname","location","history","push","children","AdminLayout","WebLayout","admin_login","routes","RouteView","routesRenderMsp","map","route","index","key","render","includes","className","to","this","React","PureComponent","Api","url","params","_params","Object","keys","reduce","acc","val","_url","replace","ajax","headers","body","method","api","User","LOGIN","LOGIN_SUCCESS","LOGIN_ERROR","doLogin","createAction","loginSuccess","setItem","loginError","Article","get_article_list","get_article_list_all","get_article_list_all_success","get_article_success","get_article_error","get_article_status","del_article","del_article_success","del_article_error","write_article","update_article","create_article","create_article_success","create_article_error","get_article","get_article_item","get_article_item_success","get_article_item_error","getArticleList","article","getArticleListAll","getArticleListAllSuccess","list","getArticleSuccess","getArticleError","getArticleStatus","list_loading","delArticle","id","delArticleSuccess","delArticleError","writeArticle","content","updateArticle","createArticle","createArticleSuccess","createArticleError","getArticleItem","getArticle","getArticleItemSuccess","articleItem","getArticleItemError","err","Tags","get_tag","get_tag_all","get_tag_all_success","get_tag_all_error","create_tag","create_tag_success","create_tag_err","del_tag","del_tag_err","getTag","getTagAll","getTagAllSuccess","tag_list_all","getTagAllError","createTag","tag","createTagSuccess","createTagErr","msg","delTag","delTagErr","Category","get_category","get_category_all","get_category_all_success","get_category_all_error","create_category","create_category_success","create_category_err","del_category","del_category_err","getCategory","getCategoryAll","getCategoryAllSuccess","category_list_all","getCategoryAllError","createCategory","category","createCategorySuccess","createCategoryErr","delCategory","delCategoryErr","Star","get_star","get_star_success","get_star_all","get_star_all_success","get_star_all_error","create_star","create_star_success","create_star_err","del_star","del_star_err","getStar","getStarSuccess","star_list","getStarAll","getStarAllSuccess","star_list_all","getStarAllError","createStar","star","createStarSuccess","createStarErr","delStar","delStarErr","initState","passwd","isLogin","userReducer","state","action","type","getType","instance","payload","article_list","article_list_all","article_item","articleReducer","tag_list","category_list","userEpic","action$","state$","pipe","ofType","switchMap","post","userName","password","mergeMap","res","console","log","response","code","data","concat","of","catchError","throwError","get_article_all","get","item","createdAt","moment","format","updatedAt","get_articleEpic","del_articleEpic","del","create_articleEpic","upadte_articleEpic","concatAll","get_articleItem","merge","createAt","message","success","error","epicMiddleware","createEpicMiddleware","logger","createLogger","collapsed","createBrowserHistory","persistConfig","storage","persistedReducer","persistReducer","combineReducers","router","connectRouter","middlewares","routerMiddleware","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","run","store$","dependencies","combineEpics","source","ReactDOM","loading","document","getElementById","color","menuConfig","loadingComponent","loader","Loadable1"],"mappings":"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","file":"static/js/main.8e79716f.chunk.js","sourcesContent":["import { Loadable } from \"@utils\";\n\nconst admin_index = Loadable(() => import(\"../components/admin\"));\nconst admin_home = Loadable(() => import(\"../components/admin/home\"));\nconst admin_article = Loadable(() => import(\"../components/admin/article\"));\nconst admin_star = Loadable(() => import(\"../components/admin/star\"));\nconst admin_tag = Loadable(() => import(\"../components/admin/tag\"));\nconst admin_category = Loadable(() => import(\"../components/admin/category\"));\nconst admin_articleAdd = Loadable(() =>\n  import(\"../components/admin/article-add\")\n);\n\nexport const admins = [\n  {\n    title: \"首页\",\n    path: \"/admin/home\",\n    exact: true,\n    menu: true,\n    component: admin_home,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n\n  {\n    title: \"文章\",\n    path: \"/admin/article\",\n    exact: true,\n    menu: true,\n    component: admin_article,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    title: \"收藏\",\n    path: \"/admin/star\",\n    exact: true,\n    menu: true,\n    component: admin_star,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    title: \"标签\",\n    path: \"/admin/tags\",\n    exact: true,\n    menu: true,\n    component: admin_tag,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    title: \"分类\",\n    path: \"/admin/category\",\n    exact: true,\n    menu: true,\n    component: admin_category,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    title: \"文章添加\",\n    path: \"/admin/article-add/\",\n    exact: true,\n    menu: false,\n    component: admin_articleAdd,\n    beforeEnter: (routeProps, extraProps) => {}\n  }\n];\n","import { Loadable } from \"@utils\";\n\nconst web_home = Loadable(() => import(\"../components/web/home\"));\nconst web_archive = Loadable(() => import(\"../components/web/archive\"));\nconst web_detail = Loadable(() => import(\"../components/web/detail\"));\nconst web_star = Loadable(() => import(\"../components/web/star\"));\nconst web_about = Loadable(() => import(\"../components/web/about\"));\nconst web_markdown = Loadable(() => import(\"../components/web/markdown\"));\n\nexport const webs = [\n  {\n    title: \"首页\",\n    path: \"/web/home\",\n    exact: true,\n    menu: true,\n    icon: \"home\",\n    component: web_home,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    title: \"归档\",\n    path: \"/web/archive\",\n    exact: true,\n    menu: true,\n    icon: \"edit\",\n    component: web_archive,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    title: \"收藏\",\n    path: \"/web/star\",\n    exact: true,\n    menu: true,\n    icon: \"star\",\n    component: web_star,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    icon: \"team\",\n    title: \"关于\",\n    path: \"/web/about\",\n    exact: true,\n    menu: true,\n    component: web_about,\n    beforeEnter: (routeProps, extraProps) => {}\n  },\n  {\n    title: \"文章\",\n    path: \"/web/detail/:id\",\n    exact: true,\n    menu: false,\n    icon: \"edit\",\n    component: web_detail,\n    beforeEnter: (routeProps, extraProps) => {}\n  }\n  // {\n  //   title: \"markdown\",\n  //   path: \"/web/markdown\",\n  //   exact: true,\n  //   menu: true,\n  //   icon: \"edit\",\n  //   component: web_markdown,\n  //   beforeEnter: (routeProps, extraProps) => {}\n  // }\n];\n","import React, { ReactElement, useState } from \"react\";\n\ninterface Props {}\n\nexport default function(Component) {\n  if (Component.requireLogin) {\n    return Component.requireLogin;\n  }\n\n  function requireLogin(props) {\n    // 判断登陆\n    const user = sessionStorage.getItem(\"user\");\n    // 未登陆重定向到登陆页面\n    const pathname = props.location.pathname !== \"/login\";\n\n    if (!user && pathname) {\n      props.history.push(\"/login\");\n    }\n\n    return user ? <Component {...props}>{props.children}</Component> : null;\n  }\n\n  Component.requireLogin = requireLogin;\n  return Component.requireLogin;\n}\n","import React, { ReactElement } from \"react\";\nimport { Loadable } from \"@utils\";\nimport { Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { admins } from \"./admin\";\nimport { webs } from \"./web\";\nexport * from \"./admin\";\nexport * from \"./web\";\nimport requireLogin from \"./requireLogin\";\n\nexport class Routes {\n  public title?: string;\n  public component?: any;\n  public path?: string;\n  public menu?: boolean;\n  public exact?: boolean;\n  public render?: Function;\n  public beforeEnter?: (routeProps: any, extraProps: any) => any;\n  public routes?: Array<Routes>;\n}\n\nconst AdminLayout = Loadable(() => import(\"../components/common/adminLayout\"));\nconst WebLayout = Loadable(() => import(\"../components/common/webLayout\"));\nconst admin_login = Loadable(() => import(\"../components/admin/login\"));\n\nexport const routes = [\n  {\n    path: \"/admin\",\n    component: AdminLayout,\n    routes: admins\n  },\n  {\n    path: \"/web\",\n    component: WebLayout,\n    routes: webs\n  },\n  {\n    title: \"登录\",\n    path: \"/login\",\n    exact: true,\n    menu: false,\n    component: admin_login,\n    beforeEnter: (routeProps, extraProps) => {}\n  }\n];\n\ninterface Props {}\n\nexport default class RouteView extends React.PureComponent<Props> {\n  public routes: Routes[] = routes;\n  private routesRenderMsp = (routes: Routes[]) => {\n    return routes.map((route: Routes, index) => (\n      <Route\n        key={`key${route.path}`}\n        path={route.path}\n        exact={route.exact}\n        render={(props: RouteComponentProps) => {\n          const Component = route.path.includes(\"/admin\")\n            ? requireLogin(route.component)\n            : route.component;\n          return (\n            <Component {...props}>\n              {route.routes ? this.routesRenderMsp(route.routes) : null}\n            </Component>\n          );\n        }}\n      />\n    ));\n  };\n\n  public render() {\n    return (\n      <div className=\"route\">\n        <Route exact path=\"/\" render={() => <Redirect to=\"/web/home\" push />} />\n        {this.routesRenderMsp(this.routes)}\n      </div>\n    );\n  }\n}\n","import { ajax } from \"rxjs/ajax\";\n\ninterface IParams {\n  [p: string]: any;\n}\n\n// export namespace Api {\n//   export function get(url: string, params: IParams) {\n//     const _params = Object.keys(params).reduce((acc, val) => {\n//       return acc + `${val}=${params[val]}&`;\n//     }, \"\");\n//     const _url = url.replace(/\\?$/, \"\") + \"?\";\n//     return ajax({\n//       url: (_url + _params).replace(/\\&$/, \"\"),\n//       headers: {\n//         \"Content-Type\": \"application/json; charset=utf-8\"\n//       }\n//     });\n//   }\n\n//   export function post(url: string, body: IParams) {\n//     return ajax({\n//       url: url,\n//       method: \"post\",\n//       body: body\n//     });\n//   }\n// }\n\nexport class Api {\n  private static api: Api;\n  public get(url: string, params?: IParams) {\n    const _params = params\n      ? Object.keys(params).reduce((acc, val) => {\n          return acc + `${val}=${params[val]}&`;\n        }, \"\")\n      : \"\";\n    const _url = url.replace(/\\?$/, \"\") + \"?\";\n    return ajax({\n      url: (_url + _params).replace(/\\&$/, \"\"),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    });\n  }\n\n  public post(url: string, body: IParams) {\n    return ajax({\n      url: url,\n      method: \"post\",\n      body: body\n    });\n  }\n\n  public static get instance() {\n    if (!this.api) {\n      this.api = new Api();\n    }\n    return this.api;\n  }\n}\n","import { createAction, ActionType } from \"typesafe-actions\";\n\nexport class User {\n  public LOGIN: string = \"LOGIN\";\n  public LOGIN_SUCCESS: string = \"LOGIN_SUCCESS\";\n  public LOGIN_ERROR: string = \"LOGIN_ERROR\";\n\n  public static user: User;\n\n  public static get instance() {\n    if (!this.user) {\n      this.user = new User();\n    }\n    return this.user;\n  }\n\n  public doLogin = createAction(this.LOGIN)();\n  public loginSuccess = createAction(this.LOGIN_SUCCESS, user => {\n    sessionStorage.setItem(\"user\", user.user);\n    return user;\n  })();\n  public loginError = createAction(this.LOGIN_ERROR, user => user)();\n}\n","import { createAction, ActionType } from \"typesafe-actions\";\n\nexport type ArticleType = ActionType<typeof Article.instance>;\n\nexport class Article {\n  public get_article_list: string = \"GET_ARTICLE_LIST\";\n  public get_article_list_all: string = \"GET_ARTICLE_LIST_ALL\";\n  public get_article_list_all_success: string = \"GET_ARTICLE_LIST_ALL_SUCCESS\";\n  public get_article_success: string = \"GET_ARTICLE_SUCCESS\";\n  public get_article_error: string = \"GET_ARTICLE_ERROR\";\n  public get_article_status: string = \"GET_ARTICLE_STATUS\";\n\n  public del_article: string = \"DEL_ARTICLE\";\n  public del_article_success: string = \"DEL_ARTICLE_SUCCESS\";\n  public del_article_error: string = \"DEL_ARTICLE_ERROR\";\n\n  public write_article: string = \"WRITE_ARTICLE\";\n  public update_article: string = \"UPDATE_ARTICLE\";\n  public create_article: string = \"CREATE_ARTICLE\";\n  public create_article_success: string = \"CREATE_ARTICLE_SUCCESS\";\n  public create_article_error: string = \"CREATE_ARTICLE_ERROR\";\n\n  public get_article = \"GET_ARTICLE\";\n  public get_article_item = \"GET_ARTICLE_ITEM\";\n  public get_article_item_success = \"GET_ARTICLE_ITEM_SUCCESS\";\n  public get_article_item_error = \"GET_ARTICLE_ITEM_ERROR\";\n\n  public static article: Article;\n\n  public static get instance() {\n    if (!this.article) {\n      this.article = new Article();\n    }\n    return this.article;\n  }\n\n  public getArticleList = createAction(\n    this.get_article_list,\n    (article?: any) => article\n  )();\n  public getArticleListAll = createAction(this.get_article_list_all)();\n  public getArticleListAllSuccess = createAction(\n    this.get_article_list_all_success,\n    (list: []) => list\n  )();\n  public getArticleSuccess = createAction(\n    this.get_article_success,\n    article => article\n  )();\n  public getArticleError = createAction(\n    this.get_article_error,\n    article => article\n  )();\n  public getArticleStatus = createAction(\n    this.get_article_status,\n    (list_loading: boolean = false) => ({ list_loading })\n  )();\n\n  public delArticle = createAction(this.del_article, id => id)();\n  public delArticleSuccess = createAction(\n    this.del_article_success,\n    article => article\n  )();\n  public delArticleError = createAction(\n    this.del_article_error,\n    article => article\n  )();\n\n  public writeArticle = createAction(\n    this.write_article,\n    (content: string) => content\n  )();\n  public updateArticle = createAction(\n    this.update_article,\n    (article: { id: number; title: string }) => article\n  )();\n  public createArticle = createAction(\n    this.create_article,\n    (article: { title: string }) => article\n  )();\n  public createArticleSuccess = createAction(\n    this.create_article_success,\n    article => article\n  )();\n  public createArticleError = createAction(\n    this.create_article_error,\n    article => article\n  )();\n\n  public getArticleItem = createAction(\n    this.get_article_item,\n    (id: { id: number }) => {\n      return id;\n    }\n  )();\n\n  public getArticle = createAction(this.get_article, (id: { id: number }) => {\n    return id;\n  })();\n\n  public getArticleItemSuccess = createAction(\n    this.get_article_item_success,\n    articleItem => articleItem\n  )();\n  public getArticleItemError = createAction(\n    this.get_article_item_error,\n    err => err\n  )();\n}\n","import { createAction, ActionType } from \"typesafe-actions\";\n\nexport type TagType = ActionType<typeof Tags.instance>;\n\nexport class Tags {\n  public get_tag: string = \"GET_TAG\";\n  public get_tag_all: string = \"GET_TAG_ALL\";\n  public get_tag_all_success: string = \"GET_TAG_ALL_SUCCESS\";\n  public get_tag_all_error: string = \"GET_TAG_ALL_ERROR\";\n\n  public create_tag = \"CREATE_TAG\";\n  public create_tag_success = \"CREATE_TAG_SUCCESS\";\n  public create_tag_err = \"CREATE_TAG_ERR\";\n\n  public del_tag = \"DEL_TAG\";\n  public del_tag_err = \"DEL_TAG_ERR\";\n\n  public static article: Tags;\n\n  public static get instance() {\n    if (!this.article) {\n      this.article = new Tags();\n    }\n    return this.article;\n  }\n\n  public getTag = createAction(\n    this.get_tag,\n    (params: { name: string; pageNo: number; pageSize: number }) => params\n  )();\n  public getTagAll = createAction(this.get_tag_all)();\n  public getTagAllSuccess = createAction(\n    this.get_tag_all_success,\n    tag_list_all => tag_list_all\n  )();\n  public getTagAllError = createAction(this.get_tag_all_error)();\n\n  public createTag = createAction(\n    this.create_tag,\n    (tag: { name: string }) => tag\n  )();\n  public createTagSuccess = createAction(this.create_tag_success)();\n  public createTagErr = createAction(this.create_tag_err, msg => msg)();\n\n  public delTag = createAction(this.del_tag, (id: { id: number }) => id)();\n  public delTagErr = createAction(this.del_tag_err, msg => msg)();\n}\n","import { createAction, ActionType } from \"typesafe-actions\";\nimport category from \"../reducer/category\";\n\nexport type CategoryType = ActionType<typeof Category.instance>;\n\nexport class Category {\n  public get_category: string = \"GET_CATEGORY\";\n  public get_category_all: string = \"GET_CATEGORY_ALL\";\n  public get_category_all_success: string = \"GET_CATEGORY_ALL_SUCCESS\";\n  public get_category_all_error: string = \"GET_CATEGORY_ALL_ERROR\";\n\n  public create_category = \"CREATE_CATEGORY\";\n  public create_category_success = \"CREATE_CATEGORY_SUCCESS\";\n  public create_category_err = \"CREATE_CATEGORY_ERR\";\n\n  public del_category = \"DEL_CATEGORY\";\n  public del_category_err = \"DEL_CATEGORY_ERR\";\n\n  public static article: Category;\n\n  public static get instance() {\n    if (!this.article) {\n      this.article = new Category();\n    }\n    return this.article;\n  }\n\n  public getCategory = createAction(\n    this.get_category,\n    (params: { name: string; pageNo: number; pageSize: number }) => params\n  )();\n  public getCategoryAll = createAction(this.get_category_all)();\n  public getCategoryAllSuccess = createAction(\n    this.get_category_all_success,\n    category_list_all => category_list_all\n  )();\n  public getCategoryAllError = createAction(this.get_category_all_error)();\n\n  public createCategory = createAction(\n    this.create_category,\n    (category: { name: string }) => category\n  )();\n  public createCategorySuccess = createAction(\n    this.create_category_success,\n    category => category\n  )();\n  public createCategoryErr = createAction(\n    this.create_category_err,\n    msg => msg\n  )();\n\n  public delCategory = createAction(\n    this.del_category,\n    (id: { id: number }) => id\n  )();\n  public delCategoryErr = createAction(this.del_category_err, msg => msg)();\n}\n","import { createAction, ActionType } from \"typesafe-actions\";\n\nexport type starType = ActionType<typeof Star.instance>;\n\nexport class Star {\n  public get_star: string = \"GET_STAR\";\n  public get_star_success: string = \"GET_STAR_SUCCESS\";\n  public get_star_all: string = \"GET_STAR_ALL\";\n  public get_star_all_success: string = \"GET_STAR_ALL_SUCCESS\";\n  public get_star_all_error: string = \"GET_STAR_ALL_ERROR\";\n\n  public create_star = \"CREATE_STAR\";\n  public create_star_success = \"CREATE_STAR_SUCCESS\";\n  public create_star_err = \"CREATE_STAR_ERR\";\n\n  public del_star = \"DEL_STAR\";\n  public del_star_err = \"DEL_STAR_ERR\";\n\n  public static article: Star;\n\n  public static get instance() {\n    if (!this.article) {\n      this.article = new Star();\n    }\n    return this.article;\n  }\n\n  public getStar = createAction(\n    this.get_star,\n    (params: { name: string; pageNo: number; pageSize: number }) => params\n  )();\n  public getStarSuccess = createAction(\n    this.get_star_success,\n    star_list => star_list\n  )();\n  public getStarAll = createAction(this.get_star_all)();\n  public getStarAllSuccess = createAction(\n    this.get_star_all_success,\n    star_list_all => star_list_all\n  )();\n  public getStarAllError = createAction(this.get_star_all_error)();\n\n  public createStar = createAction(\n    this.create_star,\n    (star: { title: string; url: string }) => star\n  )();\n  public createStarSuccess = createAction(this.create_star_success)();\n  public createStarErr = createAction(this.create_star_err, msg => msg)();\n\n  public delStar = createAction(this.del_star, (id: { id: number }) => id)();\n  public delStarErr = createAction(this.del_star_err, msg => msg)();\n}\n","export * from \"./user\";\nexport * from \"./article\";\nexport * from \"./tag\";\nexport * from \"./category\";\nexport * from \"./star\";\n\nexport interface IBaseAction<T> {\n  type: string;\n  payload: T;\n}\n","import { getType } from \"typesafe-actions\";\nimport { User } from \"../actions\";\n\nexport interface IUserState {\n  user: string;\n  passwd: string;\n  isLogin: boolean;\n}\n\nconst initState = {\n  user: \"\",\n  passwd: \"\",\n  isLogin: false\n};\n\nexport default function userReducer(\n  state: IUserState = initState,\n  action: any\n): IUserState {\n  switch (action.type) {\n    case getType(User.instance.loginSuccess):\n      const { user, passwd } = action.payload;\n      return {\n        ...state,\n        user,\n        passwd,\n        isLogin: true\n      };\n    case getType(User.instance.loginError):\n      return {\n        ...state,\n        user: \"\",\n        passwd: \"\",\n        isLogin: false\n      };\n    default:\n      return state;\n  }\n}\n","import { getType } from \"typesafe-actions\";\nimport { Article } from \"../actions\";\n\nexport interface IArticleState {\n  article_list: Array<any>;\n  article_list_all: Array<any>;\n  article_item: any;\n  list_loading: boolean;\n  content: string;\n}\n\nconst initState = {\n  article_list: null,\n  article_list_all: null,\n  article_item: null,\n  list_loading: false,\n  content: \"// markdown\"\n};\n\nexport default function articleReducer(\n  state: IArticleState = initState,\n  action: any\n): IArticleState {\n  switch (action.type) {\n    case getType(Article.instance.getArticleSuccess):\n      return {\n        ...state,\n        article_list: action.payload,\n        list_loading: false\n      };\n    case getType(Article.instance.getArticleListAllSuccess):\n      return {\n        ...state,\n        article_list_all: action.payload,\n        list_loading: false\n      };\n    case getType(Article.instance.getArticleError):\n      return {\n        ...state,\n        list_loading: false\n      };\n    case getType(Article.instance.getArticleStatus):\n      return {\n        ...state,\n        list_loading: action.payload.list_loading\n      };\n    case getType(Article.instance.getArticleItemSuccess):\n      const { article_item } = action.payload;\n      return {\n        ...state,\n        article_item\n      };\n    case getType(Article.instance.writeArticle):\n      const content = action.payload;\n      return {\n        ...state,\n        content\n      };\n    default:\n      return state;\n  }\n}\n","import { getType } from \"typesafe-actions\";\nimport { Tags } from \"@actions\";\n\ninterface TagState {\n  tag_list: Array<any>;\n  tag_list_all: Array<any>;\n}\n\nconst initState = {\n  tag_list: null,\n  tag_list_all: null\n};\n\nexport default function tag(\n  state: TagState = initState,\n  action: {\n    type: string;\n    payload: any;\n  }\n): TagState {\n  switch (action.type) {\n    case getType(Tags.instance.getTagAllSuccess):\n      const { tag_list_all = null } = action.payload;\n      return { ...state, tag_list_all };\n    default:\n      return state;\n  }\n}\n","import { getType } from \"typesafe-actions\";\nimport { Category } from \"@actions\";\n\ninterface CategoryState {\n  category_list: Array<any>;\n  category_list_all: Array<any>;\n}\n\nconst initState = {\n  category_list: null,\n  category_list_all: null\n};\n\nexport default function category(\n  state: CategoryState = initState,\n  action: {\n    type: string;\n    payload: any;\n  }\n): CategoryState {\n  switch (action.type) {\n    case getType(Category.instance.getCategoryAllSuccess):\n      const { category_list_all = null } = action.payload;\n      return { ...state, category_list_all };\n    default:\n      return state;\n  }\n}\n","import { getType } from \"typesafe-actions\";\nimport { Star } from \"@actions\";\n\ninterface TagState {\n  star_list: Array<any>;\n  star_list_all: Array<any>;\n}\n\nconst initState = {\n  star_list: null,\n  star_list_all: null\n};\n\nexport default function star(\n  state: TagState = initState,\n  action: {\n    type: string;\n    payload: any;\n  }\n): TagState {\n  switch (action.type) {\n    case getType(Star.instance.getStarAllSuccess):\n      const { star_list_all = null } = action.payload;\n      return { ...state, star_list_all };\n    case getType(Star.instance.getStarSuccess):\n      const star_list = action.payload;\n      return { ...state, star_list };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { StateType } from \"typesafe-actions\";\nimport { RouterState, connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport userReducer from \"./user\";\nimport articleReducer from \"./article\";\nimport tag from \"./tag\";\nimport category from \"./category\";\nimport star from \"./star\";\n\nexport type UserState = StateType<typeof userReducer>;\nexport type ArticleState = StateType<typeof articleReducer>;\nexport type TagState = StateType<typeof tag>;\nexport type Category = StateType<typeof category>;\nexport type Star = StateType<typeof star>;\n\nexport interface IState {\n  router: RouterState;\n  user: UserState;\n  article: ArticleState;\n  tag: TagState;\n  category: Category;\n  star: Star;\n}\n\nexport const rootReducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    user: userReducer,\n    article: articleReducer,\n    tag,\n    category,\n    star\n  });\n","import { ofType, Epic, ActionsObservable } from \"redux-observable\";\nimport { User } from \"../actions\";\nimport { interval, concat } from \"rxjs\";\nimport { throwError, of, merge, combineLatest } from \"rxjs\";\nimport {\n  map,\n  switchMap,\n  catchError,\n  take,\n  mapTo,\n  delay,\n  startWith,\n  mergeMap,\n  concatAll\n} from \"rxjs/operators\";\nimport { getType } from \"typesafe-actions\";\nimport { push } from \"connected-react-router\";\nimport { Api } from \"../../utils/api\";\n\nexport const userEpic1 = (action$: ActionsObservable<any>, state$) =>\n  action$.pipe(\n    ofType(getType(User.instance.doLogin)),\n    switchMap(({ payload }) => {\n      return Api.instance\n        .post(\"/api/login\", {\n          user: payload.userName,\n          passwd: payload.password\n        })\n        .pipe(\n          map(res => {\n            if (res.response.code === 1000) {\n              const data = {\n                user: res.response.user,\n                passwd: res.response.passwd\n              };\n              return push(\"/admin/home\");\n              return User.instance.loginSuccess(data);\n            } else {\n              return User.instance.loginError(res.response.msg);\n            }\n          }),\n          catchError(err => {\n            User.instance.loginError(\"发生了错误\");\n            return throwError(err);\n          })\n        );\n    })\n  );\n\nexport const userEpic = (action$: ActionsObservable<any>, state$) =>\n  action$.pipe(\n    ofType(getType(User.instance.doLogin)),\n    switchMap(({ payload }) => {\n      return Api.instance.post(\"/api/login\", {\n        user: payload.userName,\n        passwd: payload.password\n      });\n    }),\n    mergeMap(res => {\n      console.log(res, \"res\");\n      if (res.response.code === 1000) {\n        const data = {\n          user: res.response.user,\n          passwd: res.response.passwd\n        };\n        return concat(\n          of(User.instance.loginSuccess(data)),\n          of(push(\"/admin/home\"))\n        );\n      } else {\n        return of(User.instance.loginError(res.response.msg));\n      }\n    }),\n    catchError(err => {\n      User.instance.loginError(\"发生了错误\");\n      return throwError(err);\n    })\n  );\n","import { ofType, Epic, ActionsObservable } from \"redux-observable\";\nimport { getType, action } from \"typesafe-actions\";\nimport { push } from \"connected-react-router\";\nimport { throwError, of, concat, merge } from \"rxjs\";\nimport {\n  map,\n  switchMap,\n  catchError,\n  mapTo,\n  distinctUntilChanged,\n  combineLatest,\n  takeLast,\n  mergeMap,\n  concatAll\n} from \"rxjs/operators\";\nimport moment from \"moment\";\nimport { IState } from \"@reducer\";\nimport { Article } from \"@actions\";\nimport { Api } from \"../../utils/api\";\nimport { connect } from \"http2\";\n\nexport const get_article_all = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Article.instance.getArticleListAll)),\n    switchMap(() =>\n      Api.instance.get(\"/api/article/list/all\").pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map((item: any) => {\n              // console.log(item);\n              return {\n                ...item,\n                createdAt: moment(item.createdAt).format(\"YYYY-MM-DD, h:mm:ss\"),\n                updatedAt: moment(item.updatedAt).format(\"YYYY-MM-DD, h:mm:ss\")\n              };\n            });\n            return Article.instance.getArticleListAllSuccess(data);\n          }\n          return Article.instance.getArticleError(res.response.msg);\n        })\n      )\n    )\n  );\n\nexport const get_articleEpic = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Article.instance.getArticleList)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/article/list\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map((item: any) => {\n              return {\n                ...item,\n                createdAt: moment(item.createdAt).format(\"YYYY-MM-DD, h:mm:ss\"),\n                updatedAt: moment(item.updatedAt).format(\"YYYY-MM-DD, h:mm:ss\")\n              };\n            });\n            return Article.instance.getArticleSuccess(data);\n          } else {\n            Article.instance.getArticleError(res.response.msg);\n          }\n        }),\n        catchError(err => {\n          return throwError(err);\n        })\n      );\n    })\n  );\n\nexport const del_articleEpic = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Article.instance.delArticle)),\n    switchMap(({ payload }) => {\n      return Api.instance.post(\"/api/article/destroy\", payload).pipe(\n        map(res => {\n          return Article.instance.delArticleSuccess(res);\n        }),\n        map(del => {\n          return Article.instance.getArticleList();\n        }),\n        catchError(err => {\n          Article.instance.delArticleError(err);\n          return throwError(err);\n        })\n      );\n    })\n  );\n\nexport const create_articleEpic = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Article.instance.createArticle)),\n    switchMap(({ payload }) => {\n      return Api.instance.post(\"/api/article/create\", payload).pipe(\n        map(res => {\n          return Article.instance.createArticleSuccess(res);\n        }),\n        catchError(err => {\n          Article.instance.createArticleError(err);\n          return throwError(err);\n        })\n      );\n    })\n  );\nexport const upadte_articleEpic = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Article.instance.updateArticle)),\n    switchMap(({ payload }) => {\n      return Api.instance.post(\"/api/article/update\", payload).pipe(\n        catchError(err => {\n          return throwError(err);\n        })\n      );\n    }),\n    map(res => {\n      if (res.response.code === 1000) {\n        return concat(\n          of(Article.instance.createArticleSuccess(res)),\n          of(push(\"/admin/article\"))\n        );\n      } else {\n        return of(Article.instance.createArticleError(res.response.msg));\n      }\n    }),\n    concatAll()\n  );\n\nexport const get_articleItem = (action$: ActionsObservable<any>, state$) => {\n  // const params$ = state$.pipe(\n  //   map(({ router }: IState) => {\n  //     return router.location.state;\n  //   }),\n  //   distinctUntilChanged()\n  // );\n\n  return action$.pipe(\n    ofType(getType(Article.instance.getArticleItem)),\n    // combineLatest(params$, (action, params) => params),\n    switchMap(({ payload, ...aaa }) => {\n      // console.log(payload, aaa, \"payloadpayloadpayloadpayload\");\n      return Api.instance\n        .get(\"/api/article/item\", payload)\n        .pipe(map(res => res));\n    }),\n    mergeMap((res: any) => {\n      if (res.response.code === 1000) {\n        const data = res.response.data;\n        data.createdAt = moment(data.createdAt).format(\"YYYY-MM-DD, h:mm:ss\");\n        data.updatedAt = moment(data.createdAt).format(\"YYYY-MM-DD, h:mm:ss\");\n        return merge(\n          of(\n            Article.instance.getArticleItemSuccess({\n              article_item: data\n            })\n          ),\n          of(push(\"/admin/article-add\"))\n        );\n      }\n      return of(Article.instance.getArticleItemError(res.response.msg));\n    })\n  );\n};\n\nexport const get_article = (action$: ActionsObservable<any>, state$) => {\n  return action$.pipe(\n    ofType(getType(Article.instance.getArticle)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/article/item\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            const data = res.response.data;\n            data.createdAt = moment(data.createdAt).format(\n              \"YYYY-MM-DD, h:mm:ss\"\n            );\n            data.updatedAt = moment(data.createdAt).format(\n              \"YYYY-MM-DD, h:mm:ss\"\n            );\n            return Article.instance.getArticleItemSuccess({\n              article_item: data\n            });\n          }\n          Article.instance.getArticleItemError(res.response.msg);\n        })\n      );\n    })\n  );\n};\n","import { getType } from \"typesafe-actions\";\nimport { of, throwError } from \"rxjs\";\nimport { map, switchMap, catchError } from \"rxjs/operators\";\nimport { ofType, ActionsObservable } from \"redux-observable\";\nimport { message } from \"antd\";\nimport { Api } from \"../../utils\";\nimport { Tags } from \"@actions\";\nimport moment from \"moment\";\n\nexport const get_tag_all = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Tags.instance.getTagAll)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/tag/list/all\").pipe(\n        map((res: any) => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map(item => ({\n              ...item,\n              createdAt: moment(item.createAt).format(\"YYYY-MM-DD, h:mm:ss a\")\n            }));\n            return Tags.instance.getTagAllSuccess({\n              tag_list_all: data\n            });\n          }\n        }),\n        catchError(err => throwError(err))\n      );\n    })\n  );\n};\n\nexport const get_tag = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Tags.instance.getTag)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/tag/list\", payload).pipe(\n        map((res: any) => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map(item => ({\n              ...item,\n              createdAt: moment(item.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")\n            }));\n            return Tags.instance.getTagAllSuccess({\n              tag_list_all: data\n            });\n          }\n        }),\n        catchError(err => throwError(err))\n      );\n    })\n  );\n};\n\nexport const createTag = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Tags.instance.createTag)),\n    // throttleTime(200),\n    switchMap(({ payload }) => {\n      /**\n       * payload: {name: string|number}\n       */\n      console.log(payload, \"payloadpayloadpayloadpayloadpayload\");\n      return Api.instance.post(\"/api/tag/create\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            message.success(\"分类创建成功\");\n            return Tags.instance.getTagAll();\n          }\n          return Tags.instance.createTagErr(res.response.msg);\n        })\n      );\n    })\n  );\n};\n\nexport const del_tag = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Tags.instance.delTag)),\n    switchMap(({ payload }) => {\n      /**\n       * payload : {id: number}\n       */\n      console.log(payload);\n      return Api.instance.post(\"/api/tag/destroy\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            return Tags.instance.getTagAll();\n          }\n          message.error(res.response.msg);\n          return Tags.instance.delTagErr(res.response.msg);\n        })\n      );\n    })\n  );\n","import { getType } from \"typesafe-actions\";\nimport { of, throwError } from \"rxjs\";\nimport { map, switchMap, catchError } from \"rxjs/operators\";\nimport { ofType, ActionsObservable } from \"redux-observable\";\nimport { message } from \"antd\";\nimport { Api } from \"../../utils\";\nimport { Star } from \"@actions\";\nimport moment from \"moment\";\n\nexport const get_star_all = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Star.instance.getStarAll)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/star/list/all\").pipe(\n        map((res: any) => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map(item => ({\n              ...item,\n              createdAt: moment(item.createAt).format(\"YYYY-MM-DD, h:mm:ss a\")\n            }));\n            return Star.instance.getStarAllSuccess({\n              star_list_all: data\n            });\n          }\n        }),\n        catchError(err => throwError(err))\n      );\n    })\n  );\n};\n\nexport const get_star = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Star.instance.getStar)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/star/list\", payload).pipe(\n        map((res: any) => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map(item => ({\n              ...item,\n              createdAt: moment(item.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")\n            }));\n            return Star.instance.getStarSuccess(data);\n          }\n        }),\n        catchError(err => throwError(err))\n      );\n    })\n  );\n};\n\nexport const createStar = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Star.instance.createStar)),\n    // throttleTime(200),\n    switchMap(({ payload }) => {\n      /**\n       * payload: {name: string|number}\n       */\n      console.log(payload, \"payloadpayloadpayloadpayloadpayload\");\n      return Api.instance.post(\"/api/star/create\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            message.success(\"收藏创建成功\");\n            return Star.instance.getStarAll();\n          }\n          return Star.instance.createStarErr(res.response.msg);\n        })\n      );\n    })\n  );\n};\n\nexport const del_star = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Star.instance.delStar)),\n    switchMap(({ payload }) => {\n      /**\n       * payload : {id: number}\n       */\n      console.log(payload);\n      return Api.instance.post(\"/api/star/destroy\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            return Star.instance.getStarAll();\n          }\n          message.error(res.response.msg);\n          return Star.instance.delStarErr(res.response.msg);\n        })\n      );\n    })\n  );\n","import { getType } from \"typesafe-actions\";\nimport { of, throwError } from \"rxjs\";\nimport {\n  map,\n  mapTo,\n  switchMap,\n  catchError,\n  throttleTime\n} from \"rxjs/operators\";\nimport { ofType, ActionsObservable } from \"redux-observable\";\nimport { message } from \"antd\";\nimport { Api } from \"../../utils\";\nimport { Category } from \"../actions\";\nimport moment from \"moment\";\nimport category from \"../reducer/category\";\n\nexport const get_category_all = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Category.instance.getCategoryAll)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/category/list/all\").pipe(\n        map((res: any) => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map(item => ({\n              ...item,\n              createdAt: moment(item.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")\n            }));\n            return Category.instance.getCategoryAllSuccess({\n              category_list_all: data\n            });\n          }\n        }),\n        catchError(err => throwError(err))\n      );\n    })\n  );\n};\n\nexport const get_category = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Category.instance.getCategory)),\n    switchMap(({ payload }) => {\n      return Api.instance.get(\"/api/category/list\", payload).pipe(\n        map((res: any) => {\n          if (res.response.code === 1000) {\n            const data = res.response.data.map(item => ({\n              ...item,\n              createdAt: moment(item.createdAt).format(\"YYYY-MM-DD HH:mm:ss\")\n            }));\n            return Category.instance.getCategoryAllSuccess({\n              category_list_all: data\n            });\n          }\n        }),\n        catchError(err => throwError(err))\n      );\n    })\n  );\n};\n\nexport const createCategory = (action$: ActionsObservable<any>) => {\n  return action$.pipe(\n    ofType(getType(Category.instance.createCategory)),\n    // throttleTime(200),\n    switchMap(({ payload }) => {\n      /**\n       * payload: {name: string|number}\n       */\n      console.log(payload, \"payloadpayloadpayloadpayloadpayload\");\n      return Api.instance.post(\"/api/category/create\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            message.success(\"分类创建成功\");\n            return Category.instance.getCategoryAll();\n          }\n          return Category.instance.createCategoryErr(res.response.msg);\n        })\n      );\n    })\n  );\n};\n\nexport const del_category = (action$: ActionsObservable<any>) =>\n  action$.pipe(\n    ofType(getType(Category.instance.delCategory)),\n    switchMap(({ payload }) => {\n      /**\n       * payload : {id: number}\n       */\n      console.log(payload);\n      return Api.instance.post(\"/api/category/destroy\", payload).pipe(\n        map(res => {\n          if (res.response.code === 1000) {\n            return Category.instance.getCategoryAll();\n          }\n          message.error(res.response.msg);\n          return Category.instance.delCategoryErr(res.response.msg);\n        })\n      );\n    })\n  );\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport { rootReducer } from \"./reducer\";\nimport { rootEpics } from \"./epics\";\n\nconst epicMiddleware = createEpicMiddleware();\nconst logger = createLogger({ collapsed: true }); // log every action to see what's happening behind the scenes.\nconst history = createBrowserHistory();\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nconst middlewares = [logger, epicMiddleware, routerMiddleware(history)];\nconst initialState = {};\n\nconst store = createStore(\n  persistedReducer,\n  // rootReducer(history),\n  initialState,\n  // compose(applyMiddleware(...middlewares))\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\nlet persistor = persistStore(store);\n\nepicMiddleware.run(rootEpics);\nexport { store as default, history, persistor };\n// return { store, persistor };\n","import { combineEpics } from \"redux-observable\";\nimport { catchError } from \"rxjs/operators\";\nimport { userEpic } from \"./user\";\nimport {\n  get_article_all,\n  get_articleEpic,\n  del_articleEpic,\n  create_articleEpic,\n  upadte_articleEpic,\n  get_articleItem,\n  get_article\n} from \"./article\";\nimport { get_tag_all, get_tag, createTag, del_tag } from \"./tag\";\nimport { get_star_all, get_star, createStar, del_star } from \"./star\";\nimport {\n  get_category_all,\n  createCategory,\n  del_category,\n  get_category\n} from \"./category\";\n\nexport const rootEpics = (action$, store$, dependencies) =>\n  combineEpics(\n    userEpic,\n\n    get_article_all,\n    get_articleEpic,\n    del_articleEpic,\n    create_articleEpic,\n    upadte_articleEpic,\n    get_articleItem,\n    get_article,\n\n    get_tag_all,\n    get_tag,\n    createTag,\n    del_tag,\n\n    get_star_all,\n    get_star,\n    createStar,\n    del_star,\n\n    get_category,\n    get_category_all,\n    createCategory,\n    del_category\n  )(action$, store$, dependencies).pipe(\n    catchError((err, source) => {\n      console.log(err);\n      return source;\n    })\n  );\n","import \"./index.less\";\nimport \"./assets/root.less\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport RouteView from \"./routes/index\";\nimport store, { history, persistor } from \"./redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ConnectedRouter history={history}>\n        <RouteView />\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","export function timetrans(time) {\n  var date = new Date(time);\n  var Y = date.getFullYear() + \"-\";\n  var M =\n    (date.getMonth() + 1 < 10\n      ? \"0\" + (date.getMonth() + 1)\n      : date.getMonth() + 1) + \"-\";\n  var D = (date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate()) + \" \";\n  // var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':'\n  // var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':'\n  // var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds())\n  return Y + M + D;\n}\n\nexport const color = [\n  \"magenta\",\n  \"red\",\n  \"volcano\",\n  \"orange\",\n  \"gold\",\n  \"lime\",\n  \"green\",\n  \"cyan\",\n  \"blue\",\n  \"geekblue\",\n  \"purple\"\n];\n","export const menuConfig = [\n  {\n    menu: true,\n    icon: \"home\",\n    title: \"首页\",\n    path: \"/admin/home\"\n  },\n  {\n    menu: true,\n    icon: \"edit\",\n    title: \"文章\",\n    path: \"/admin/article\"\n  },\n  {\n    menu: true,\n    icon: \"tags\",\n    title: \"标签\",\n    path: \"/admin/tags\"\n  },\n  {\n    menu: true,\n    icon: \"folder\",\n    title: \"分类\",\n    path: \"/admin/category\"\n  },\n  {\n    menu: true,\n    icon: \"star\",\n    title: \"收藏\",\n    path: \"/admin/star\"\n  }\n];\n","import React from \"react\";\nimport Loadable1, { LoadableComponent } from \"react-loadable\";\n\n//通用的过场组件\nconst loadingComponent = () => {\n  return <div>loading</div>;\n};\n\n//过场组件默认采用通用的，若传入了loading，则采用传入的过场组件\nexport const Loadable = (loader: any, loading = loadingComponent) => {\n  return Loadable1({\n    loader,\n    loading\n  });\n};\n","export * from \"./utils\";\nexport * from \"./api\";\nexport * from \"./config\";\nexport * from \"./loadable\";\n"],"sourceRoot":""}